import{c as F}from"./graph-db-worker-8b7476cf.js";function L(f,I){return I.forEach(function(u){u&&typeof u!="string"&&!Array.isArray(u)&&Object.keys(u).forEach(function(o){if(o!=="default"&&!(o in f)){var c=Object.getOwnPropertyDescriptor(u,o);Object.defineProperty(f,o,c.get?c:{enumerable:!0,get:function(){return u[o]}})}})}),Object.freeze(f)}var w={},$={get exports(){return w},set exports(f){w=f}};(function(f,I){(function(u,o){f.exports=o()})(F,function(){class u{constructor(e){if(e?.strategy==null)throw"Must pass options.strategy, a strategy";if(e?.comparator==null)throw"Must pass options.comparator, a comparator";if(e?.onInsertConflict==null)throw"Must pass options.onInsertConflict, a function";this.priv=new e.strategy(e),this.length=0}insert(e){return this.priv.insert(e),this.length+=1,this}remove(e){return this.priv.remove(e),this.length-=1,this}clear(){return this.priv.clear(),this.length=0,this}contains(e){return this.priv.contains(e)}toArray(){return this.priv.toArray()}forEach(e,r){return this.priv.forEachImpl(e,this,r),this}map(e,r){const i=[];return this.forEach(function(l,n,s){return i.push(e.call(r,l,n,s))}),i}filter(e,r){const i=[];return this.forEach(function(l,n,s){if(e.call(r,l,n,s))return i.push(l)}),i}every(e,r){let i=!0;return this.forEach(function(l,n,s){i&&!e.call(r,l,n,s)&&(i=!1)}),i}some(e,r){let i=!1;return this.forEach(function(l,n,s){!i&&e.call(r,l,n,s)&&(i=!0)}),i}findIterator(e){return this.priv.findIterator(e)}beginIterator(){return this.priv.beginIterator()}endIterator(){return this.priv.endIterator()}}class o{constructor(e,r){this.priv=e,this.index=r,this.data=this.priv.data}hasNext(){return this.index<this.data.length}hasPrevious(){return this.index>0}value(){return this.index<this.data.length?this.data[this.index]:null}setValue(e){if(!this.priv.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.data[this.index]=e}next(){return this.index>=this.data.length?null:new o(this.priv,this.index+1)}previous(){return this.index<=0?null:new o(this.priv,this.index-1)}}const c=(t,e,r)=>{let i=0,l=t.length;for(;i<l;){const n=i+l>>>1;r(t[n],e)<0?i=n+1:l=n}return i};class T{constructor(e){this.options=e,this.onInsertConflict=this.options.onInsertConflict,this.comparator=this.options.comparator,this.data=[]}toArray(){return this.data}insert(e){const r=c(this.data,e,this.comparator);return this.data[r]!==void 0&&this.comparator(this.data[r],e)===0?this.data.splice(r,1,this.onInsertConflict(this.data[r],e)):this.data.splice(r,0,e)}remove(e){const r=c(this.data,e,this.comparator);if(this.comparator(this.data[r],e)!==0)throw"Value not in set";return this.data.splice(r,1)}clear(){return this.data.length=0}contains(e){const r=c(this.data,e,this.comparator);return this.index!==this.data.length&&this.comparator(this.data[r],e)===0}forEachImpl(e,r,i){const l=this.data,n=l.length;for(let s=0;s<n;s++)e.call(i,l[s],s,r)}findIterator(e){const r=c(this.data,e,this.comparator);return new o(this,r)}beginIterator(){return new o(this,0)}endIterator(){return new o(this,this.data.length)}}const m=(t,e)=>{for(;e[t]!==null;){const r=e;e=e[t],e._iteratorParentNode=r}return e},N=(t,e)=>{let r,i;if(e[t]!==null)r=e,e=e[t],e._iteratorParentNode=r,i=t==="left"?"right":"left",e=m(i,e);else{for(;(r=e._iteratorParentNode)!==null&&r[t]===e;)e=r;e=r}return e};class a{constructor(e,r){this.tree=e,this.node=r}next(){if(this.node===null)return null;{const e=N("right",this.node);return new a(this.tree,e)}}previous(){if(this.node===null){if(this.tree.root===null)return null;{this.tree.root._iteratorParentNode=null;const e=m("right",this.tree.root);return new a(this.tree,e)}}else{const e=N("left",this.node);return e===null?null:new a(this.tree,e)}}hasNext(){return this.node!==null}hasPrevious(){return this.previous()!==null}value(){return this.node===null?null:this.node.value}setValue(e){if(!this.tree.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.node.value=e}}a.find=function(t,e,r){const i=t.root;i!=null&&(i._iteratorParentNode=null);let l=i,n=null;for(;l!==null;){const s=r(e,l.value);if(s===0)break;if(s<0){if(l.left===null)break;n=l,l.left._iteratorParentNode=l,l=l.left}else if(l.right!==null)l.right._iteratorParentNode=l,l=l.right;else{l=n;break}}return new a(t,l)},a.left=t=>{if(t.root===null)return new a(t,null);{t.root._iteratorParentNode=null;const e=m("left",t.root);return new a(t,e)}},a.right=t=>new a(t,null);const p=(t,e)=>{t!==null&&(p(t.left,e),e(t.value),p(t.right,e))};class b{toArray(){const e=[];return p(this.root,function(r){return e.push(r)}),e}clear(){return this.root=null}forEachImpl(e,r,i){let l=0;p(this.root,function(n){e.call(i,n,l,r),l+=1})}contains(e){const r=this.comparator;let i=this.root;for(;i!==null;){const l=r(e,i.value);if(l===0)break;l<0?i=i.left:i=i.right}return i!==null&&r(i.value,e)===0}findIterator(e){return a.find(this,e,this.comparator)}beginIterator(){return a.left(this)}endIterator(){return a.right(this)}}class C{constructor(e){this.value=e,this.left=null,this.right=null}}const _=(t,e)=>{for(;t[e]!==null;)t=t[e];return t},v=(t,e,r)=>{if(t===null)throw"Value not in set";const i=r(e,t.value);if(i<0)t.left=v(t.left,e,r);else if(i>0)t.right=v(t.right,e,r);else if(t.left===null&&t.right===null)t=null;else if(t.right===null)t=t.left;else if(t.left===null)t=t.right;else{const l=_(t.right,"left");t.value=l.value,t.right=v(t.right,l.value,r)}return t};class M extends b{constructor(e){super(),this.options=e,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(e){const r=this.comparator;if(this.root!==null){let i=this.root,l=null;for(;;){const n=r(e,i.value);if(n===0){i.value=this.onInsertConflict(i.value,e);return}else{if(l=n<0?"left":"right",i[l]===null)break;i=i[l]}}return i[l]=new C(e)}else return this.root=new C(e)}remove(e){return this.root=v(this.root,e,this.comparator)}}class O{constructor(e){this.value=e,this.left=null,this.right=null,this.isRed=!0}}const R=t=>{const e=t.right;return t.right=e.left,e.left=t,e.isRed=t.isRed,t.isRed=!0,e},d=t=>{const e=t.left;return t.left=e.right,e.right=t,e.isRed=t.isRed,t.isRed=!0,e},h=t=>{t.isRed=!t.isRed,t.left.isRed=!t.left.isRed,t.right.isRed=!t.right.isRed},S=t=>(h(t),t.right!==null&&t.right.left!==null&&t.right.left.isRed&&(t.right=d(t.right),t=R(t),h(t)),t),j=t=>(h(t),t.left!==null&&t.left.left!==null&&t.left.left.isRed&&(t=d(t),h(t)),t),x=(t,e,r,i)=>{if(t===null)return new O(e);const l=r(e,t.value);return l===0?t.value=i(t.value,e):l<0?t.left=x(t.left,e,r,i):t.right=x(t.right,e,r,i),t.right!==null&&t.right.isRed&&!(t.left!==null&&t.left.isRed)&&(t=R(t)),t.left!==null&&t.left.isRed&&t.left.left!==null&&t.left.left.isRed&&(t=d(t)),t.left!==null&&t.left.isRed&&t.right!==null&&t.right.isRed&&h(t),t},B=t=>{for(;t.left!==null;)t=t.left;return t},V=t=>(t.right!==null&&t.right.isRed&&(t=R(t)),t.left!==null&&t.left.isRed&&t.left.left!==null&&t.left.left.isRed&&(t=d(t)),t.left!==null&&t.left.isRed&&t.right!==null&&t.right.isRed&&h(t),t),A=t=>t.left===null?null:(!t.left.isRed&&!(t.left.left!==null&&t.left.left.isRed)&&(t=S(t)),t.left=A(t.left),V(t)),y=(t,e,r)=>{if(t===null)throw"Value not in set";if(r(e,t.value)<0){if(t.left===null)throw"Value not in set";!t.left.isRed&&!(t.left.left!==null&&t.left.left.isRed)&&(t=S(t)),t.left=y(t.left,e,r)}else{if(t.left!==null&&t.left.isRed&&(t=d(t)),t.right===null){if(r(e,t.value)===0)return null;throw"Value not in set"}!t.right.isRed&&!(t.right.left!==null&&t.right.left.isRed)&&(t=j(t)),r(e,t.value)===0?(t.value=B(t.right).value,t.right=A(t.right)):t.right=y(t.right,e,r)}return t!==null&&(t=V(t)),t};class E extends b{constructor(e){super(),this.options=e,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(e){this.root=x(this.root,e,this.comparator,this.onInsertConflict),this.root.isRed=!1}remove(e){this.root=y(this.root,e,this.comparator),this.root!==null&&(this.root.isRed=!1)}}const P={OnInsertConflictThrow:(t,e)=>{throw new Error("Value already in set")},OnInsertConflictReplace:(t,e)=>e,OnInsertConflictIgnore:(t,e)=>t};class g extends u{constructor(e){e||(e={}),e.strategy||(e.strategy=E),e.comparator||(e.comparator=function(r,i){return(r||0)-(i||0)}),e.onInsertConflict||(e.onInsertConflict=P.OnInsertConflictThrow),super(e)}}return g.ArrayStrategy=T,g.BinaryTreeStrategy=M,g.RedBlackTreeStrategy=E,Object.assign(g,P),g})})($);var k=w,W=L({__proto__:null,default:k},[w]);export{W as s};
